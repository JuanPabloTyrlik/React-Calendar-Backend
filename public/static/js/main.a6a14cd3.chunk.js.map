{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteFab.js","components/calendar/CalendarScreen.js","helpers/prepareEvents.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["TYPES","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","type","payload","auth","calendar","map","event","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","fetchWithoutToken","endpoint","data","method","url","process","fetch","toUpperCase","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","Authorization","undefined","eventClearActive","eventAddNew","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","login","user","checkingFinish","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","Lemail","Lpassword","Rname","Remail","Rpassword","Rpassword2","errors","setErrors","loginForm","handleLoginChange","registerForm","handleRegisterChange","isValidLoginForm","validator","isEmail","trim","length","Swal","fire","isValidRegisterForm","test","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","message","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiModalOpen","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","start","moment","minutes","seconds","toDate","end","add","initEvent","notes","CalendarModal","startDate","setStartDate","endDate","setEndDate","formValues","setFormValues","closeModal","setTimeout","handleChange","useEffect","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isBefore","getState","_id","eventStartAddNew","newEndDate","required","clearIcon","minDate","isAfter","autoComplete","rows","AddNewFab","DeleteFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6a14cd3.chunk.js","sourcesContent":["export const TYPES = {\r\n    UI_OPEN_MODAL: '[UI] Open Modal',\r\n    UI_CLOSE_MODAL: '[UI] Close Modal',\r\n\r\n    EVENT_ADD_NEW: '[EVENT] Add New',\r\n    EVENT_SET_ACTIVE: '[EVENT] Set Active',\r\n    EVENT_CLEAR_ACTIVE: '[EVENT] Clear Active',\r\n    EVENT_CLEAR_ALL: '[EVENT] Clear All',\r\n    EVENT_UPDATED: '[EVENT] Update Event',\r\n    EVENT_DELETED: '[EVENT] Delete Event',\r\n    EVENT_LOADED: '[EVENT] Load Events',\r\n\r\n    AUTH_LOGIN: '[AUTH] Login',\r\n    AUTH_LOGOUT: '[AUTH] Logout',\r\n    AUTH_CHECKING_FINISH: '[AUTH] Finish checking login state',\r\n};\r\n","import { TYPES } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case TYPES.UI_OPEN_MODAL:\r\n            return { ...state, modalOpen: true };\r\n        case TYPES.UI_CLOSE_MODAL:\r\n            return { ...state, modalOpen: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { TYPES } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case TYPES.EVENT_ADD_NEW:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, payload],\r\n            };\r\n        case TYPES.EVENT_SET_ACTIVE:\r\n            return {\r\n                ...state,\r\n                activeEvent: payload,\r\n            };\r\n        case TYPES.EVENT_CLEAR_ACTIVE:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            };\r\n        case TYPES.EVENT_CLEAR_ALL:\r\n            return initialState;\r\n        case TYPES.EVENT_UPDATED:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((event) =>\r\n                    event.id === payload.id ? payload : event\r\n                ),\r\n            };\r\n        case TYPES.EVENT_DELETED:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    (event) => event.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null,\r\n            };\r\n        case TYPES.EVENT_LOADED:\r\n            return {\r\n                ...state,\r\n                events: [...payload],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { TYPES } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case TYPES.AUTH_LOGIN:\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                checking: false,\r\n            };\r\n        case TYPES.AUTH_LOGOUT:\r\n            return { checking: false };\r\n        case TYPES.AUTH_CHECKING_FINISH:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { uiReducer } from './uiReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    calendar: calendarReducer,\r\n});\r\n","import thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== 'undefined' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","export const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${process.env.REACT_APP_API_URL}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method: method.toUpperCase(),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const token = localStorage.getItem('token') || '';\r\n    const url = `${process.env.REACT_APP_API_URL}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method: method.toUpperCase(),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            body: data ? JSON.stringify(data) : undefined,\r\n        });\r\n    }\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { TYPES } from '../types/types';\r\n\r\n// Async Actions\r\n\r\nexport const eventStartAddNew = (event) => async (dispatch, getState) => {\r\n    const { name } = getState().auth;\r\n    try {\r\n        const resp = await fetchWithToken('events', event, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            event.id = body.event.id;\r\n            event.user = {\r\n                _id: body.event.user,\r\n                name,\r\n            };\r\n            dispatch(eventAddNew(event));\r\n        }\r\n    } catch (err) {\r\n        Swal.fire('Error', err.message, 'error');\r\n    }\r\n};\r\n\r\nexport const eventStartLoadingEvents = () => async (dispatch) => {\r\n    try {\r\n        const resp = await fetchWithToken('events');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            dispatch(eventLoaded(prepareEvents(body.events)));\r\n        }\r\n    } catch (err) {\r\n        Swal.fire('Error', err.message, 'error');\r\n    }\r\n};\r\n\r\nexport const eventStartUpdate = (event) => async (dispatch) => {\r\n    try {\r\n        const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            dispatch(eventUpdated(event));\r\n        } else {\r\n            Swal.fire('Error', body.message, 'error');\r\n        }\r\n    } catch (err) {\r\n        Swal.fire('Error', err.message, 'error');\r\n    }\r\n};\r\n\r\nexport const eventStartDelete = (id) => async (dispatch) => {\r\n    try {\r\n        const resp = await fetchWithToken(`events/${id}`, null, 'DELETE');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            dispatch(eventDeleted());\r\n        } else {\r\n            Swal.fire('Error', body.message, 'error');\r\n        }\r\n    } catch (err) {\r\n        Swal.fire('Error', err.message, 'error');\r\n    }\r\n};\r\n\r\n// Sync Actions\r\n\r\nexport const eventSetActive = (event) => {\r\n    return {\r\n        type: TYPES.EVENT_SET_ACTIVE,\r\n        payload: event,\r\n    };\r\n};\r\n\r\nexport const eventClearActive = () => {\r\n    return {\r\n        type: TYPES.EVENT_CLEAR_ACTIVE,\r\n        payload: null,\r\n    };\r\n};\r\n\r\nexport const eventClearAll = () => {\r\n    return {\r\n        type: TYPES.EVENT_CLEAR_ALL,\r\n        payload: null,\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => {\r\n    return {\r\n        type: TYPES.EVENT_ADD_NEW,\r\n        payload: event,\r\n    };\r\n};\r\n\r\nconst eventUpdated = (event) => {\r\n    return {\r\n        type: TYPES.EVENT_UPDATED,\r\n        payload: event,\r\n    };\r\n};\r\n\r\nconst eventDeleted = () => {\r\n    return {\r\n        type: TYPES.EVENT_DELETED,\r\n        payload: null,\r\n    };\r\n};\r\n\r\nconst eventLoaded = (events) => {\r\n    return {\r\n        type: TYPES.EVENT_LOADED,\r\n        payload: events,\r\n    };\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { TYPES } from '../types/types';\r\nimport { eventClearAll } from './events';\r\n\r\n// Async Actions\r\nexport const startLogin = (email, password) => async (dispatch) => {\r\n    const resp = await fetchWithoutToken(\r\n        'auth/login',\r\n        { email, password },\r\n        'POST'\r\n    );\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(\r\n            login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            })\r\n        );\r\n    } else {\r\n        Swal.fire('Error', body.message, 'error');\r\n    }\r\n};\r\n\r\nexport const startRegister = (name, email, password) => async (dispatch) => {\r\n    const resp = await fetchWithoutToken(\r\n        'auth/register',\r\n        { name, email, password },\r\n        'POST'\r\n    );\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(\r\n            login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            })\r\n        );\r\n    } else {\r\n        Swal.fire('Error', body.message, 'error');\r\n    }\r\n};\r\n\r\nexport const startChecking = () => async (dispatch) => {\r\n    const resp = await fetchWithToken('auth/token');\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(\r\n            login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            })\r\n        );\r\n    } else {\r\n        dispatch(checkingFinish());\r\n    }\r\n};\r\n\r\nexport const startLogout = () => (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n    dispatch(eventClearAll());\r\n};\r\n\r\n// Sync Actions\r\nexport const login = (user) => {\r\n    return {\r\n        type: TYPES.AUTH_LOGIN,\r\n        payload: user,\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: TYPES.AUTH_LOGOUT,\r\n        payload: null,\r\n    };\r\n};\r\n\r\nexport const checkingFinish = () => {\r\n    return {\r\n        type: TYPES.AUTH_CHECKING_FINISH,\r\n        payload: null,\r\n    };\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React, { useState } from 'react';\r\nimport validator from 'validator';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [errors, setErrors] = useState({\r\n        Lemail: false,\r\n        Lpassword: false,\r\n        Rname: false,\r\n        Remail: false,\r\n        Rpassword: false,\r\n        Rpassword2: false,\r\n    });\r\n\r\n    const [loginForm, handleLoginChange] = useForm({\r\n        Lemail: '',\r\n        Lpassword: '',\r\n    });\r\n\r\n    const [registerForm, handleRegisterChange] = useForm({\r\n        Rname: '',\r\n        Remail: '',\r\n        Rpassword: '',\r\n        Rpassword2: '',\r\n    });\r\n\r\n    const { Lemail, Lpassword } = loginForm;\r\n    const { Rname, Remail, Rpassword, Rpassword2 } = registerForm;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if (isValidLoginForm()) {\r\n            dispatch(startLogin(Lemail, Lpassword));\r\n        }\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isValidRegisterForm()) {\r\n            dispatch(startRegister(Rname, Remail, Rpassword));\r\n        }\r\n    };\r\n\r\n    const isValidLoginForm = () => {\r\n        if (!validator.isEmail(Lemail)) {\r\n            setErrors({ ...errors, Lemail: true });\r\n            Swal.fire('Error', 'Email must be valid', 'error');\r\n            return false;\r\n        }\r\n        if (Lpassword.trim().length < 8) {\r\n            setErrors({ ...errors, Lpassword: true });\r\n            Swal.fire(\r\n                'Error',\r\n                'Password must be at least 8 characters',\r\n                'error'\r\n            );\r\n            return false;\r\n        }\r\n        setErrors({\r\n            Lemail: false,\r\n            Lpassword: false,\r\n            Rname: false,\r\n            Remail: false,\r\n            Rpassword: false,\r\n            Rpassword2: false,\r\n        });\r\n        return true;\r\n    };\r\n\r\n    const isValidRegisterForm = () => {\r\n        if (/^\\s*$/.test(Rname)) {\r\n            setErrors({ ...errors, Rname: true });\r\n            Swal.fire('Error', 'Name cannot be empty', 'error');\r\n            return false;\r\n        }\r\n        if (!validator.isEmail(Remail)) {\r\n            setErrors({ ...errors, Remail: true });\r\n            Swal.fire('Error', 'Email must be valid', 'error');\r\n            return false;\r\n        }\r\n        if (Rpassword.trim().length < 8 || Rpassword.trim().length > 32) {\r\n            setErrors({ ...errors, Rpassword: true });\r\n            Swal.fire(\r\n                'Error',\r\n                'Password must be at least 8 characters and less that 32 characters',\r\n                'error'\r\n            );\r\n            return false;\r\n        }\r\n        if (!/[0-9]/.test(Rpassword)) {\r\n            setErrors({ ...errors, Rpassword: true });\r\n            Swal.fire('Error', 'Password must contain a number', 'error');\r\n            return false;\r\n        }\r\n        if (!/[a-z]/.test(Rpassword)) {\r\n            setErrors({ ...errors, Rpassword: true });\r\n            Swal.fire(\r\n                'Error',\r\n                'Password must contain a lower case letter',\r\n                'error'\r\n            );\r\n            return false;\r\n        }\r\n        if (!/[A-Z]/.test(Rpassword)) {\r\n            setErrors({ ...errors, Rpassword: true });\r\n            Swal.fire(\r\n                'Error',\r\n                'Password must contain an upper case letter',\r\n                'error'\r\n            );\r\n            return false;\r\n        }\r\n        if (!/[*.!@$%^&(){}[\\]:;,.?/\\\\~_+\\-=|]/.test(Rpassword)) {\r\n            setErrors({ ...errors, Rpassword: true });\r\n            Swal.fire(\r\n                'Error',\r\n                'Password must contain a special character',\r\n                'error'\r\n            );\r\n            return false;\r\n        }\r\n        if (Rpassword !== Rpassword2) {\r\n            setErrors({ ...errors, Rpassword: true });\r\n            setErrors({ ...errors, Rpassword2: true });\r\n            Swal.fire('Error', \"Passwords don't match\", 'error');\r\n            return false;\r\n        }\r\n        setErrors({\r\n            Lemail: false,\r\n            Lpassword: false,\r\n            Rname: false,\r\n            Remail: false,\r\n            Rpassword: false,\r\n            Rpassword2: false,\r\n        });\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className={\r\n                                    errors.Lemail\r\n                                        ? 'form-control is-invalid'\r\n                                        : 'form-control'\r\n                                }\r\n                                placeholder=\"Correo\"\r\n                                name=\"Lemail\"\r\n                                value={Lemail}\r\n                                onChange={handleLoginChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={\r\n                                    errors.Lpassword\r\n                                        ? 'form-control is-invalid'\r\n                                        : 'form-control'\r\n                                }\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"Lpassword\"\r\n                                value={Lpassword}\r\n                                onChange={handleLoginChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className={\r\n                                    errors.Rname\r\n                                        ? 'form-control is-invalid'\r\n                                        : 'form-control'\r\n                                }\r\n                                placeholder=\"Nombre\"\r\n                                name=\"Rname\"\r\n                                value={Rname}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className={\r\n                                    errors.Remail\r\n                                        ? 'form-control is-invalid'\r\n                                        : 'form-control'\r\n                                }\r\n                                placeholder=\"Correo\"\r\n                                name=\"Remail\"\r\n                                value={Remail}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={\r\n                                    errors.Rpassword\r\n                                        ? 'form-control is-invalid'\r\n                                        : 'form-control'\r\n                                }\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"Rpassword\"\r\n                                value={Rpassword}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={\r\n                                    errors.Rpassword2\r\n                                        ? 'form-control is-invalid'\r\n                                        : 'form-control'\r\n                                }\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"Rpassword2\"\r\n                                value={Rpassword2}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector((state) => state.auth);\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-3\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const {\r\n        title,\r\n        user: { name },\r\n    } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {name}</span>\r\n        </div>\r\n    );\r\n};\r\n","import { TYPES } from '../types/types';\r\n\r\nexport const uiModalOpen = () => {\r\n    return {\r\n        type: TYPES.UI_OPEN_MODAL,\r\n        payload: null,\r\n    };\r\n};\r\n\r\nexport const uiModalClose = () => {\r\n    return {\r\n        type: TYPES.UI_CLOSE_MODAL,\r\n        payload: null,\r\n    };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiModalClose } from '../../actions/ui';\r\nimport {\r\n    eventClearActive,\r\n    eventStartAddNew,\r\n    eventStartUpdate,\r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst start = moment().minutes(0).seconds(0).toDate();\r\nconst end = moment(start).add(1, 'hour').toDate();\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start,\r\n    end,\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        ui: { modalOpen },\r\n        calendar: { activeEvent },\r\n    } = useSelector((state) => state);\r\n\r\n    const [startDate, setStartDate] = useState(start);\r\n    const [endDate, setEndDate] = useState(end);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiModalClose());\r\n        setTimeout(() => {\r\n            // Waits for animation to hide the modal\r\n            dispatch(eventClearActive());\r\n        }, 200);\r\n    };\r\n\r\n    const handleStartDate = (e) => {\r\n        setStartDate(e);\r\n        if (e) {\r\n            const newEndDate = moment(e).add(1, 'hours').toDate();\r\n            setEndDate(newEndDate);\r\n            setFormValues({\r\n                ...formValues,\r\n                start: e,\r\n                end: newEndDate,\r\n            });\r\n        } else {\r\n            setFormValues({\r\n                ...formValues,\r\n                start: e,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleEndDate = (e) => {\r\n        setEndDate(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(formValues.start);\r\n        const momentEnd = moment(formValues.end);\r\n        if (!formValues.title) {\r\n            return Swal.fire(\r\n                'Error',\r\n                'El evento debe tener un título',\r\n                'error'\r\n            );\r\n        }\r\n        if (!formValues.end) {\r\n            return Swal.fire(\r\n                'Error',\r\n                'El evento debe tener una fecha de fin',\r\n                'error'\r\n            );\r\n        }\r\n        if (momentEnd.isBefore(momentStart)) {\r\n            return Swal.fire(\r\n                'Error',\r\n                'La fecha de fin debe ser mayor a la inicial',\r\n                'error'\r\n            );\r\n        }\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate({ ...activeEvent, ...formValues }));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        closeModal();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormValues({\r\n            title: activeEvent?.title || '',\r\n            notes: activeEvent?.notes || '',\r\n            start: activeEvent?.start || start,\r\n            end: activeEvent?.end || end,\r\n        });\r\n    }, [activeEvent]);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n                closeTimeoutMS={200}\r\n            >\r\n                <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n                <hr />\r\n                <form className=\"container\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDate}\r\n                            value={startDate}\r\n                            className={`form-control ${\r\n                                startDate ? 'is-valid' : 'is-invalid'\r\n                            }`}\r\n                            required\r\n                            clearIcon={null}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDate}\r\n                            value={endDate}\r\n                            minDate={startDate}\r\n                            className={`form-control ${\r\n                                endDate && moment(endDate).isAfter(startDate)\r\n                                    ? 'is-valid'\r\n                                    : 'is-invalid'\r\n                            }`}\r\n                            required\r\n                            clearIcon={null}\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${\r\n                                formValues.title && 'is-valid'\r\n                            }`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={formValues.title}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                            Una descripción corta\r\n                        </small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={formValues.notes}\r\n                            onChange={handleChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                            Información adicional\r\n                        </small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActive } from '../../actions/events';\r\nimport { uiModalOpen } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(eventClearActive());\r\n        dispatch(uiModalOpen());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClick}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteFab = () => {\r\n    const dispatch = useDispatch();\r\n    const { activeEvent } = useSelector((state) => state.calendar);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete(activeEvent.id));\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiModalOpen } from '../../actions/ui';\r\nimport {\r\n    eventClearActive,\r\n    eventSetActive,\r\n    eventStartLoadingEvents,\r\n} from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteFab } from '../ui/DeleteFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector((state) => state.calendar);\r\n    const { uid } = useSelector((state) => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem('lastView') || 'month'\r\n    );\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        };\r\n        return {\r\n            style,\r\n        };\r\n    };\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch(uiModalOpen());\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        dispatch(eventClearActive());\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch(eventClearActive());\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoadingEvents());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent,\r\n                }}\r\n            />\r\n            {activeEvent && <DeleteFab />}\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events) =>\r\n    events.map((event) => ({\r\n        ...event,\r\n        start: moment(event.start).toDate(),\r\n        end: moment(event.end).toDate(),\r\n    }));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                !isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            {checking ? (\r\n                <h5>Loading...</h5>\r\n            ) : (\r\n                <Router>\r\n                    <div>\r\n                        <Switch>\r\n                            <PublicRoute\r\n                                exact\r\n                                path=\"/login\"\r\n                                component={LoginScreen}\r\n                                isAuthenticated={!!uid}\r\n                            />\r\n                            <PrivateRoute\r\n                                exact\r\n                                path=\"/\"\r\n                                component={CalendarScreen}\r\n                                isAuthenticated={!!uid}\r\n                            />\r\n                            <Redirect to=\"/\" />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}